import heapq
graph = {
    'A':{'B':1,'C':4},
    'B':{'C':2,'D':5},
    'C':{'D':1},
    'D':{}
}
h={'A':7,'B':6,'C':2,'D':0}
def astar(start,goal):
    pq=[]
    heapq.heappush(pq,(h[start],0,start,[start]))
    visited=set()
    while pq:
        f,g,node,path=heapq.heappop(pq)
        if node==goal:
            print("Path:",path)
            print("Cost:",g)
            return
        if node in visited:
            continue
        visited.add(node)
        for n,c in graph[node].items():
            heapq.heappush(pq,(g+c+h[n],g+c,n,path+[n]))
astar('A','D')

OUTPUT

Path: ['A', 'B', 'C', 'D']
Cost: 4
