from itertools import permutations
import math
cities = {'A':(0,0),'B':(1,3),'C':(4,3),'D':(6,1)}
def distance(a,b):
    x1,y1=cities[a]
    x2,y2=cities[b]
    return math.sqrt((x1-x2)**2+(y1-y2)**2)
best_dist=float('inf')
best_path=[]
for p in permutations(cities.keys()):
    d=sum(distance(p[i],p[i+1]) for i in range(len(p)-1))+distance(p[-1],p[0])
    if d<best_dist:
        best_dist=d
        best_path=p
print("Path:",best_path)
print("Distance:",round(best_dist,2))

OUTPUT
Path: ('A', 'B', 'C', 'D')
Distance: 14.0
