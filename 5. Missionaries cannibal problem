from collections import deque
def mc():
    start=(3,3,0)
    goal=(0,0,1)
    q=deque([(start,[])])
    v=set([start])
    while q:
        (m,c,b),path=q.popleft()
        if (m,c,b)==goal:
            for p in path+[(m,c,b)]:
                print(p)
            print("Reached Goal")
            return
        moves=[(1,0),(2,0),(0,1),(0,2),(1,1)]
        for dm,dc in moves:
            if b==0:
                nm, nc, nb=m-dm, c-dc, 1
            else:
                nm, nc, nb=m+dm, c+dc, 0
            if 0<=nm<=3 and 0<=nc<=3 and (nm==0 or nm>=nc) and (3-nm==0 or 3-nm>=3-nc):
                state=(nm,nc,nb)
                if state not in v:
                    v.add(state)
                    q.append((state,path+[(m,c,b)]))
mc()

OUTPUT
(3, 3, 0)
(1, 1, 1)
(2, 2, 0)
(0, 2, 1)
(0, 3, 0)
(1, 1, 1)
(0, 0, 0)
(0, 0, 1)
Reached Goal
